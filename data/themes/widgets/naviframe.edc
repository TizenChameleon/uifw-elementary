group { name:"elm/naviframe/base/default";
   parts {
      part { name: "base0";
         description { state: "default" 0.0;
         }
      }
   }
}
group { name:"elm/naviframe/item/basic/default";
   parts {
      part { name: "title_clip";
         type: RECT;
        description { state: "default" 0.0;
            min: 1 55;
            align: 0.0 0.0;
            fixed: 0 1;
            rel1 { relative: 0.0 0.0; }
            rel2 { relative: 1.0 0.0; }
         }
         description { state: "hide" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 0 0;
            fixed: 1 1;
         }
      }
      part { name: "content_clip";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to_y: "title_clip";
            rel1.relative: 0 1;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         repeat_events: 0;
         clip_to: "content_clip";
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1.relative: 0.0 1.0;
            rel1.to_y: "title_clip";
            rel2.relative: 1.0 1.0;
         }
         description { state: "left" 0.0;
            inherit: "default" 0.0;
            rel1.relative: -1.0 1.0;
            rel2.relative: 0.0 1.0;
         }
         description { state: "right" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 1.0 1.0;
            rel2.relative: 2.0 1.0;
         }
      }
      part { name: "title_base";
         type: RECT;
         description { state: "default" 0.0;
            rel1 { to: "title_clip"; }
            rel2 { to: "title_clip"; }
            color: 225 225 225 255;
         }
      }
      part { name: "title_separator";
         type: RECT;
         clip_to: "title_clip";
         description { state: "default" 0.0;
            min: 0 5;
            align: 0.5 1;
            fixed: 0 1;
            rel1 { to: "title_clip"; relative: 0 1; }
            rel2 { to: "title_clip"; }
            color: 150 150 150 255;
         }
      }
      part { name: "elm.swallow.prev_btn";
         type: SWALLOW;
         scale: 1;
         clip_to: "title_clip";
         description { state: "default" 0.0;
            min: 80 40;
            max: 80 40;
            align: 0 0;
            fixed: 1 1;
            rel1.offset: 5 5;
            rel1.to: "title_base";
            rel2.offset: -1 -6;
            rel2.to: "title_base";
         }
      }
      part { name: "elm.swallow.next_btn";
         type: SWALLOW;
         scale: 1;
         clip_to: "title_clip";
         description { state: "default" 0.0;
            min: 80 40;
            max: 80 40;
            align: 1 0;
            fixed: 1 1;
            rel1.offset: 0 5;
            rel1.to: "title_base";
            rel2.offset: -6 -6;
            rel2.to: "title_base";
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         scale: 1;
         clip_to: "title_clip";
         description { state: "default" 0.0;
            min: 40 40;
            max: 40 40;
            align: 1 0.5;
            rel1.to: "elm.text.title";
            rel1.relative: 0 0;
            rel2.to: "elm.text.title";
            rel2.relative: 0 1;
         }
      }
      part { name: "elm.text.title";
         type: TEXT;
         scale: 1;
         repeat_events: 1;
         clip_to: "title_clip";
         description { state: "default" 0.0;
            text { font: "Sans,Edje-Vera";
               size: 12;
               min: 0 0;
               max: 1 0;
               align: 0.5 0.5;
            }
            color: 0 0 0 255;
            align: 0.5 0.5;
            rel1.to: "title_base";
            rel2.to: "title_base";
         }
      }
      part { name: "elm.text.subtitle";
         type: TEXT;
         scale: 1;
         repeat_events: 1;
         clip_to: "title_clip";
         description { state: "default" 0.0;
            text { font: "Sans,Edje-Vera";
               size: 10;
               min: 0 0;
               max: 1 0;
               align: 0.5 1;
            }
            rel1.to_y: "elm.text.title";
            rel1.relative: 0 1;
            rel1.to: "title_base";
            rel1.offset: 0 -3;
            rel2.to: "title_base";
            rel2.offset: -1 -4;
            color: 50 50 50 255;
            align: 0.5 0;
         }
      }
   }
   programs {
      program { name: "content_new_pusehd";
         signal: "elm,state,new,pushed,internal";
         source: "";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "elm.swallow.content";
         after: "show_finished";
      }
      program { name: "content_cur_pusehd";
         signal: "elm,state,cur,pushed,internal";
         source: "";
         action: STATE_SET "left" 0.0;
         target: "elm.swallow.content";
         transition: DECELERATE 0.5;
         after: "pushed_finished";
      }
      program { name: "content_prev_popped";
         signal: "elm,state,prev,popped,internal";
         source: "";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
         transition: DECELERATE 0.5;
         after: "show_finished";
      }
      program { name: "content_cur_popped";
         signal: "elm,state,cur,popped,internal";
         source: "";
         action: STATE_SET "right" 0.0;
         target: "elm.swallow.content";
         transition: DECELERATE 0.5;
         after: "popped_finished";
      }
      program { name: "cur_pushed";
         signal: "elm,state,cur,pushed";
         source: "elm";
         script {
            set_state(PART:"elm.swallow.content", "default", 0.0);
            emit("elm,state,cur,pushed,internal", "");
         }
      }
      program { name: "new_pushed";
         signal: "elm,state,new,pushed";
         source: "elm";
         script {
            set_state(PART:"elm.swallow.content", "right", 0.0);
            emit("elm,state,new,pushed,internal", "");
         }
      }
      program { name: "prev_popped";
         signal: "elm,state,prev,popped";
         source: "elm";
         script {
            set_state(PART:"elm.swallow.content", "left", 0.0);
            emit("elm,state,prev,popped,internal", "");
         }
      }
      program { name: "cur_popped";
         signal: "elm,state,cur,popped";
         source: "elm";
         script {
            set_state(PART:"elm.swallow.content", "default", 0.0);
            emit("elm,state,cur,popped,internal", "");
         }
      }
      program { name: "visible";
         signal: "elm,state,visible";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "title_show";
         signal: "elm,state,title,show";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "title_clip";
      }
      program { name: "title_hide";
         signal: "elm,state,title,hide";
         source: "elm";
         action: STATE_SET "hide" 0.0;
         target: "title_clip";
      }
      program {
         name: "title_clicked";
         signal: "mouse,clicked,1";
         source: "title_base";
         action: SIGNAL_EMIT "elm,action,title,clicked" "";
      }
      program { name: "show_finished";
         action: SIGNAL_EMIT "elm,action,show,finished" "";
      }
      program { name: "pushed_finished";
         action: SIGNAL_EMIT "elm,action,pushed,finished" "";
      }
      program { name: "popped_finished";
         action: SIGNAL_EMIT "elm,action,popped,finished" "";
      }
   }
}

